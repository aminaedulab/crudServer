# swagger: "2.0"
# info:
#   title: Youtube API
#   description: This is my company API Documentation
#   version: 1.0
#   contact:
#     email: syosas@gmail.com
#   liscence:
#     name: Apache 2.0
#     url: "http://www.apache.org/liscences/LIS"
#   servers:
#     -url: http://localhost:4000
#     description: THis is my local Server
#     -url: http://example.com/
#     description: This is my original URL
# schemes: [http]


# #Return Users From get request
# paths:
#    /string:
#      get:
#       summary: Returns a string.
#       description: String Chechup
#       responses:
#          200:    # status code
#            description: Successul Response
#            schema: 
#              type: string
#              example: "Users String"
#          400:
#            description: User Error
#   #         schema: 
#   #           type: string
#   #           example: "Some Error "
# #  paths:
#     /user:
#       get:
#         summary: Returns a list of users.
#         description: People Who are already registered
#         responses:
#           200:    # status code
#             description: Successul Response
#             schema: 
#               type: object
#                properties:
#                  id:
#                    type: integer
#                  name:
#                    type: string

swagger: "2.0"
info:
  title: Youtube API
  description: This is my company API Documentation
  version: 1.0
  contact:
    email: syosas@gmail.com
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0"
servers:
  - url: http://localhost:7000
    description: This is my local Server
  - url: http://example.com/
    description: This is my original URL
schemes:
  - http

paths:
  /string:
    get:
      summary: Returns a string.
      description: String Checkup
      responses:
        200:
          description: Successful Response
          schema:
            type: string
            example: "Users String"
        400:
          description: User Error

  /api:
    get:
      summary: Returns a list of users.
      description: People who are already registered.
      responses:
        200:
          description: Successful Response
          schema:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string

  /api/users:
    post:
      summary: Adds a new user
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            $ref: "#/definitions/User"

      responses:
        '200':
          description: OK
          schema:
            $ref: "#/definitions/User"


  
  /api/users/{userId}:
    delete:
      summary: Deletes a user by ID.
      description: Deletes the specified user.
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Deletion confirmation message
        '404':
          description: User not found

  /api/users/{usersid}:
    put:
      summary: Update a user by ID.
      parameters:
        - in: path
          name: usersid
          type: integer
          required: true
          description: The ID of the user to update.
        - in: body
          name: body
          schema:
            type: object
            properties:
              name:
                type: string
              email:
                type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Update confirmation message.
                  user:
                    $ref: "#/definitions/User"
        '400':
          description: Invalid request.
        '404':
          description: User not found.



definitions:
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      email:
        type: string
